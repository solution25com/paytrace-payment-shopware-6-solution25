<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>

        <!-- Gateway  -->

        <service id="PayTrace\Gateways\CreditCard">
            <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionStateHandler"/>
            <argument type="service" id="PayTrace\Service\PayTraceTransactionService" />
            <argument type="service" id="PayTrace\Service\PayTraceConfigService"/>
            <tag name="shopware.payment.method.sync"/>
        </service>

        <!-- Gateway END  -->


        <!-- Entity Definitions -->

        <service id="PayTrace\Core\Content\Transaction\PayTraceTransactionDefinition">
            <tag name="shopware.entity.definition" entity="payTrace_transaction"/>
        </service>

        <service id="PayTrace\Core\Content\CustomerVault\CustomerVaultDefinition">
            <tag name="shopware.entity.definition" entity="payTrace_customer_vault"/>
        </service>

        <!-- Entity Definitions END -->


        <service id="PayTrace\Command\ExampleCommand">
            <tag name="console.command"/>
        </service>

        <service id="PayTrace\Subscriber\CheckoutConfirmEventSubscriber">
            <argument type="service" id="PayTrace\Service\PayTraceApiService"/>
            <argument type="service" id="PayTrace\Service\PayTraceCustomerVaultService" />
            <tag name="kernel.event_subscriber"/>
        </service>


        <service id="PayTrace\Subscriber\OrderPaymentStatusChangeSubscriber">
            <argument type="service" id="PayTrace\Service\PayTraceTransactionService" />
            <argument type="service" id="PayTrace\Service\PayTraceApiService"/>
            <argument type="service" id="order.repository"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="PayTrace\Storefront\Controller\PayTraceController" public="true">
            <argument type="service" id="PayTrace\Service\PayTraceApiService"/>
            <argument type="service" id="PayTrace\Service\PayTraceConfigService"/>
            <argument type="service" id="PayTracePayment.logger"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>

        </service>

        <service id="PayTrace\Controller\PayTraceSavedCardsController">
            <argument type="service" id="payTrace_customer_vault.repository" />
            <argument type="service" id="PayTrace\Service\PayTraceApiService"/>
            <argument type="service" id="PayTrace\Service\PayTraceCustomerVaultService" />
            <tag name="controller.service_arguments"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
            <call method="setTwig">
                <argument type="service" id="twig"/>
            </call>
        </service>


        <service id="PayTrace\Service\PayTraceConfigService">
            <argument id="Shopware\Core\System\SystemConfig\SystemConfigService" type="service"/>
        </service>

        <service id="PayTrace\Service\PayTraceApiService">
            <argument type="service" id="PayTrace\Service\PayTraceConfigService"/>
            <argument type="service" id="PayTracePayment.logger"/>

        </service>

        <service id="PayTrace\Service\PayTraceTransactionService">
            <argument type="service" id="payTrace_transaction.repository"/>
            <argument type="service" id="order.repository"/>
            <argument type="service" id="order_transaction.repository" />
        </service>

        <service id="PayTrace\Service\PayTraceCustomerVaultService">
            <argument type="service" id="payTrace_customer_vault.repository"/>
            <argument type="service" id="PayTracePayment.logger"/>
        </service>

        <!-- Logger  -->

        <service id="PayTracePayment.logger" class="Monolog\Logger">
            <argument type="string">PayTrace</argument>
            <argument type="collection">
                <argument type="service" id="PayTracePayment.rotatingHandler"/>
            </argument>
        </service>

        <service id="PayTracePayment.rotatingHandler" class="Monolog\Handler\RotatingFileHandler">
            <argument type="string">%kernel.logs_dir%/PayTracePayment-%kernel.environment%.log</argument>
        </service>

    </services>
</container>
