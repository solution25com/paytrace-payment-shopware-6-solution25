{% extends '@Storefront/storefront/page/account/index.html.twig' %}

{% block page_account_main_content %}

    <div class="payTrace-saved b2b-create-title-text">
        <input type="hidden" name="parentname" value="payTrace Saved Cards">
    </div>

    <div class="sc-form-toggle-wrapper text-center my-4">
        <button class="sc-form-toggle-btn" type="button" id="toggleAddCardForm">
    <span class="sc-form-toggle-icon">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 4V20M4 12H20" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
      </svg>
    </span>
            <span class="sc-form-toggle-text">Add New Card</span>
        </button>
    </div>

    <div class="container sc-form-container" id="addCardFormContainer" style="display: none;" pay-trace-saved-cards-plugin>
        <div class="card shadow-sm mb-4 sc-form-card">
            <div class="card-body sc-form-card-body">
                <h5 class="card-title text-center mb-4 sc-form-title">Add a New Card</h5>
                <form class="paytrace-form-container sc-form">
                    <div class="row sc-form-row">
                        <div class="col-md-12 mb-2 sc-form-col">
                            <label for="nameSurname" class="form-label sc-form-label">Name on Card*</label>
                            <input type="text" class="form-control sc-form-input" id="nameSurname" name="nameSurname"
                                   placeholder="John Smith" required/>
                        </div>
                    </div>

                    <div class="row sc-form-row">
                        <div class="col-md-6 mb-2 sc-form-col">
                            <label for="streetAddress" class="form-label sc-form-label">Street Address*</label>
                            <input type="text" class="form-control form-control-sm sc-form-input" id="streetAddress"
                                   name="streetAddress" placeholder="123 Main St" required/>
                        </div>

                        <div class="col-md-6 mb-2 sc-form-col">
                            <label for="streetAddress2" class="form-label sc-form-label">Street Address 2</label>
                            <input type="text" class="form-control form-control-sm sc-form-input" id="streetAddress2"
                                   name="streetAddress2" placeholder="Apt 4B"/>
                        </div>
                    </div>

                    <div class="row sc-form-row">
                        <div class="col-md-6 mb-2 sc-form-col">
                            <label for="city" class="form-label sc-form-label">City*</label>
                            <input type="text" class="form-control form-control-sm sc-form-input" id="city" name="city"
                                   placeholder="New York" required/>
                        </div>

                        <div class="col-md-6 mb-2 sc-form-col">
                            <label for="state" class="form-label sc-form-label">State*</label>
                            <select id="state" name="state" class="form-select form-select-sm sc-form-select" required>
                                <option value="">-- Select State --</option>
                                <option value="AL">Alabama</option>
                                <option value="AK">Alaska</option>
                                <option value="AZ">Arizona</option>
                                <option value="AR">Arkansas</option>
                                <option value="CA">California</option>
                                <option value="CO">Colorado</option>
                                <option value="CT">Connecticut</option>
                                <option value="DE">Delaware</option>
                                <option value="DC">District of Columbia</option>
                                <option value="FL">Florida</option>
                                <option value="GA">Georgia</option>
                                <option value="HI">Hawaii</option>
                                <option value="ID">Idaho</option>
                                <option value="IL">Illinois</option>
                                <option value="IN">Indiana</option>
                                <option value="IA">Iowa</option>
                                <option value="KS">Kansas</option>
                                <option value="KY">Kentucky</option>
                                <option value="LA">Louisiana</option>
                                <option value="ME">Maine</option>
                                <option value="MD">Maryland</option>
                                <option value="MA">Massachusetts</option>
                                <option value="MI">Michigan</option>
                                <option value="MN">Minnesota</option>
                                <option value="MS">Mississippi</option>
                                <option value="MO">Missouri</option>
                                <option value="MT">Montana</option>
                                <option value="NE">Nebraska</option>
                                <option value="NV">Nevada</option>
                                <option value="NH">New Hampshire</option>
                                <option value="NJ">New Jersey</option>
                                <option value="NM">New Mexico</option>
                                <option value="NY">New York</option>
                                <option value="NC">North Carolina</option>
                                <option value="ND">North Dakota</option>
                                <option value="OH">Ohio</option>
                                <option value="OK">Oklahoma</option>
                                <option value="OR">Oregon</option>
                                <option value="PA">Pennsylvania</option>
                                <option value="RI">Rhode Island</option>
                                <option value="SC">South Carolina</option>
                                <option value="SD">South Dakota</option>
                                <option value="TN">Tennessee</option>
                                <option value="TX">Texas</option>
                                <option value="UT">Utah</option>
                                <option value="VT">Vermont</option>
                                <option value="VA">Virginia</option>
                                <option value="WA">Washington</option>
                                <option value="WV">West Virginia</option>
                                <option value="WI">Wisconsin</option>
                                <option value="WY">Wyoming</option>
                                <option value="AS">American Samoa</option>
                                <option value="GU">Guam</option>
                                <option value="MP">Northern Mariana Islands</option>
                                <option value="PR">Puerto Rico</option>
                                <option value="VI">U.S. Virgin Islands</option>
                                <option value="AA">Armed Forces Americas</option>
                                <option value="AE">Armed Forces Europe</option>
                                <option value="AP">Armed Forces Pacific</option>
                            </select>
                        </div>
                    </div>

                    <div class="row sc-form-row">
                        <div class="col-md-6 mb-2 sc-form-col">
                            <label for="postalCode" class="form-label sc-form-label">Postal Code*</label>
                            <input type="text" class="form-control form-control-sm sc-form-input" id="postalCode"
                                   name="postalCode" placeholder="10001" required/>
                        </div>

                        <div class="col-md-6 mb-2 sc-form-col">
                            <label for="country" class="form-label sc-form-label">Country*</label>
                            <select id="country" name="country" class="form-select form-select-sm sc-form-select"
                                    required>
                                <option value="">Select Country</option>
                                <option value="US" selected>United States</option>
                            </select>
                        </div>
                    </div>

                    <div id="pt_hpf_form" class="my-3 sc-form-payment-fields"></div>
                    <div id="errorContainer" class="error-container sc-form-error" style="display: none;"></div>

                    <button type="button" id="ProtectForm" class="btn btn-primary w-100 mt-3 sc-form-submit">
                        <i class="fas fa-credit-card sc-form-submit-icon"></i> Add Card
                    </button>
                </form>
            </div>
        </div>
    </div>

    {% if savedCards is not empty %}
        <div class="container mt-4">
            <div class="row">
                {% for card in savedCards %}
                    <div class="col-12 col-sm-6 col-md-6 col-lg-6 mb-3">
                        <div class="saved-card p-3 border rounded-3 shadow-sm hover-card">
                            <div class="card-info">
                                <div class="card-logo mb-2">
                                    {% set cardType = card.cardType|lower %}
                                    {% set logoMap = {
                                        'visa': 'https://upload.wikimedia.org/wikipedia/commons/4/41/Visa_Logo.png',
                                        'mastercard': 'https://upload.wikimedia.org/wikipedia/commons/e/e1/Mastercard.jpg',
                                        'discover': 'https://upload.wikimedia.org/wikipedia/commons/1/1a/Discover.png',
                                        'american express': 'https://upload.wikimedia.org/wikipedia/commons/3/38/American_Express.png'
                                    } %}
                                    {% set logoPath = logoMap[cardType] ?? 'https://via.placeholder.com/80x50?text=Card' %}
                                    <img src="{{ logoPath }}" alt="{{ card.cardType }}" class="card-logo-img">
                                </div>
                                <p class="card-holder-name mb-1"><strong>{{ card.cardHolderName }}</strong></p>
                                <p class="card-type mb-1">{{ card.cardType }}</p>
                                <div class="card-number mb-2">
                                    <span>**** **** **** {{ card.lastDigits }}</span>
                                </div>
                                <button class="btn btn-danger delete-card-btn mt-2"
                                        data-card-id="{{ card.vaultedCustomerId }}">Delete
                                </button>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>

    {% else %}
        <p class="text-center mt-4">No saved cards found.</p>
    {% endif %}

    <script src="https://protect.sandbox.paytrace.com/js/protect.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const toggleBtn = document.getElementById("toggleAddCardForm");
            const formContainer = document.getElementById("addCardFormContainer");
            const protectFormButton = document.getElementById("ProtectForm");

            toggleBtn?.addEventListener("click", () => {
                const isHidden = formContainer.style.display === "none";
                formContainer.style.display = isHidden ? "block" : "none";
                toggleBtn.textContent = isHidden ? "− Hide Form" : "+ Add New Card";
            });

            function _validateBillingData() {
                const requiredFields = [
                    {id: 'nameSurname', name: 'Name'},
                    {id: 'streetAddress', name: 'Street Address'},
                    {id: 'city', name: 'City'},
                    {id: 'state', name: 'State'},
                    {id: 'postalCode', name: 'Postal Code'},
                    {id: 'country', name: 'Country'}
                ];

                let errors = [];
                for (const field of requiredFields) {
                    const el = document.getElementById(field.id);
                    if (!el || !el.value.trim()) {
                        errors.push(`${field.name} is required.`);
                    }
                }

                if (errors.length > 0) {
                    _showError(errors);
                    return false;
                }
                return true;
            }

            function _showError(errors) {
                const errorContainer = document.getElementById('errorContainer');
                errorContainer.innerHTML = '';

                if (errors.length > 0) {
                    errorContainer.style.display = 'block';
                    errors.forEach(error => {
                        const errorElement = document.createElement('div');
                        errorElement.classList.add('error-message');
                        errorElement.textContent = error;
                        errorContainer.appendChild(errorElement);
                    });
                } else {
                    errorContainer.style.display = 'none';
                }
            }

            PTPayment.setup({
                authorization: {clientKey: '{{ paymentToken }}'},
                styles: {
                    cc: {
                        background_color: '#ffffff',
                        border_style: 'solid',
                        border_color: '#ced4da',
                        input_border_radius: '6px',
                        font_color: '#495057',
                        font_size: '14px',
                        input_border_width: '1px',
                        input_font: 'Segoe UI, sans-serif',
                        input_font_weight: '400',
                        input_margin: '3px 0px 10px 0px',
                        input_padding: '3px 8px 3px 8px',
                        label_color: '#495057',
                        label_font: 'Segoe UI, sans-serif',
                        label_font_weight: '500',
                        label_size: '12px',
                        label_width: 'auto',
                        label_margin: '0 0 4px 0',
                        label_padding: '0 4px',
                        label_border_style: 'none',
                        height: '30px',
                        width: '95%',
                        padding_bottom: '4px'
                    },
                    code: {
                        background_color: '#ffffff',
                        border_style: 'solid',
                        border_color: '#ced4da',
                        input_border_radius: '6px',
                        font_color: '#495057',
                        font_size: '14px',
                        input_border_width: '1px',
                        input_font: 'Segoe UI, sans-serif',
                        input_font_weight: '400',
                        input_margin: '5px 0px 10px 0px',
                        input_padding: '4px 8px 4px 8px',
                        label_color: '#495057',
                        label_font: 'Segoe UI, sans-serif',
                        label_font_weight: '500',
                        label_size: '13px',
                        label_width: 'auto',
                        label_margin: '0 0 4px 0',
                        label_padding: '0 4px',
                        label_border_style: 'none',
                        height: '30px',
                        width: '95%',
                        padding_bottom: '4px'
                    },
                    exp: {
                        background_color: '#ffffff',
                        border_style: 'solid',
                        border_color: '#ced4da',
                        input_border_radius: '6px',
                        font_color: '#495057',
                        font_size: '14px',
                        input_border_width: '1px',
                        input_font: 'Segoe UI, sans-serif',
                        input_font_weight: '400',
                        input_margin: '5px 0px 10px 0px',
                        input_padding: '4px 8px 4px 8px',
                        label_color: '#495057',
                        label_font: 'Segoe UI, sans-serif',
                        label_font_weight: '500',
                        label_size: '13px',
                        label_width: 'auto',
                        label_margin: '0 0 4px 0',
                        label_padding: '0 4px',
                        label_border_style: 'none',
                        height: '40px',
                        width: '40%',
                        padding_bottom: '4px',
                        type: 'dropdown',
                    },
                    body: {
                        background_color: '#ffffff'
                    },
                }
            }).then(function (instance) {

                PTPayment.theme('label-extended-top')

            }).catch(function (error) {
                console.error('Error during PayTrace setup:', error);
            });

            protectFormButton.addEventListener('click', function () {
                if (!_validateBillingData()) return;

                const name = document.getElementById('nameSurname').value;
                const streetAddress = document.getElementById('streetAddress').value;
                const streetAddress2 = document.getElementById('streetAddress2').value;
                const city = document.getElementById('city').value;
                const state = document.getElementById('state').value;
                const postalCode = document.getElementById('postalCode').value;
                const country = document.getElementById('country').value;

                PTPayment.process()
                    .then(async function (result) {
                        if (result.message) {
                            const requestData = {
                                cardToken: result.message,
                                billing_address: {
                                    name: name,
                                    street_address: streetAddress,
                                    ...(streetAddress2 && {street_address2: streetAddress2}),
                                    city: city,
                                    state: state,
                                    postal_code: postalCode,
                                    country: country,
                                },
                            };

                            try {
                                const response = await fetch('/account/payTrace-saved-cards/add-card', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify(requestData),
                                });

                                const res = await response.json();
                                if (res.error) {
                                    console.error('Error from backend:', res.message);
                                } else {
                                    location.reload();
                                }
                            } catch (err) {
                                console.error('Error during fetch request:', err);
                            }
                        } else {
                            console.error('Failed to receive a card token');
                        }
                    })
                    .catch(function (error) {
                        console.error('Error during payment processing:', error);
                    });
            });

          document.querySelectorAll('.delete-card-btn').forEach(button => {
              button.addEventListener('click', async function(event) {
                  const cardId = event.target.getAttribute('data-card-id');
                  const confirmed = confirm('Are you sure you want to delete this card?');
                  if (!confirmed) return;

                  try {
                      const response = await fetch(`/account/payTrace-saved-cards/delete-card/${cardId}`, {
                          method: 'POST',
                          headers: {
                              'Content-Type': 'application/json',
                          },
                          body: JSON.stringify({ cardId: cardId }),
                      });

                      const res = await response.json();
                      if (res.error) {
                          console.error('Error:', res.message);
                      } else {
                          event.target.closest('.saved-card').remove();
                      }
                  } catch (err) {
                      console.error('Error during delete request:', err);
                  }
              });
          });
      });
  </script>

    <style>
        .sc-form-toggle-icon {
            display: flex;
            align-items: center;
            justify-content: center;
            transition: transform 0.3s ease;
        }

        .sc-form-toggle-btn.active .sc-form-toggle-icon {
            transform: rotate(45deg);
        }

        .sc-form-toggle-text {
            position: relative;
        }

      .sc-form-container {
          max-width: 800px;
          margin: 0 auto;
          animation: fadeIn 0.3s ease-out;
      }

        .sc-form-card {
            border: none;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        }

        .sc-form-card-body {
            padding: 2rem;
        }

        .sc-form-title {
            color: #2c3e50;
            font-weight: 600;
            font-size: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .sc-form-label {
            font-weight: 500;
            color: #4a5568;
            margin-bottom: 0.5rem;
            display: block;
            font-size: 0.9rem;
        }

        .sc-form-input,
        .sc-form-select {
            padding: 0.5rem 0.75rem;
            border: 1px solid #e2e8f0;
            border-radius: 6px;
            font-size: 0.9rem;
            transition: all 0.2s ease;
            width: 100%;
        }

        .sc-form-input:focus,
        .sc-form-select:focus {
            border-color: #4299e1;
            box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.2);
            outline: none;
        }

        .sc-form-select {
            appearance: none;
            background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 0.75rem center;
            background-size: 1em;
        }

        .sc-form-row {
            margin-bottom: 1rem;
        }

        .sc-form-col {
            padding-left: 0.5rem;
            padding-right: 0.5rem;
        }

        .sc-form-payment-fields {
            margin: 1.5rem 0;
            background: #f8fafc;
            padding: 1rem;
            border-radius: 8px;
            border: 1px solid #edf2f7;
        }

        .sc-form-submit {
            padding: 0.75rem;
            border-radius: 6px;
            font-weight: 500;
            letter-spacing: 0.5px;
            transition: all 0.3s;
            position: relative;
            overflow: hidden;
            border: none;
            background: linear-gradient(135deg, #4299e1 0%, #3182ce 100%);
        }

        .sc-form-submit:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(66, 153, 225, 0.3);
        }

        .sc-form-submit:active {
            transform: translateY(0);
        }

        .sc-form-submit-icon {
            margin-right: 8px;
        }

        .sc-form-error {
            background-color: #fff5f5;
            color: #c53030;
            padding: 1rem;
            border-radius: 6px;
            margin: 1rem 0;
            border: 1px solid #fed7d7;
        }

        /* Animations */
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @media (max-width: 768px) {
            .sc-form-card-body {
                padding: 1.5rem;
            }

            .sc-form-col {
                margin-bottom: 1rem;
            }
        }

    </style>

{% endblock %}
